<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeropoint.homemaking.dao.LectureOrdersMapper">
  <resultMap id="BaseResultMap" type="com.zeropoint.homemaking.domain.LectureOrders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lecture_id" jdbcType="INTEGER" property="lectureId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="prepay_id" jdbcType="VARCHAR" property="prepayId" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="username" jdbcType="VARCHAR" property="userName" />
    <result column="lecturename" jdbcType="VARCHAR" property="lectureName" />
    <result column="course_site" jdbcType="VARCHAR" property="courseSite" />
    <result column="active_end" jdbcType="TIMESTAMP" property="activeEnd" />
    <result column="active_start" jdbcType="TIMESTAMP" property="activeStart" />
    <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="packageName" jdbcType="VARCHAR" property="packageName" />

    <result column="introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="img_src" jdbcType="VARCHAR" property="imgSrc" />
    <result column="use_count" jdbcType="INTEGER" property="useCount" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lecture_orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zeropoint.homemaking.domain.LectureOrders">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT last_insert_id()
    </selectKey>
    insert into lecture_orders (id, lecture_id, user_id,
      create_time, status, order_number, 
      amount, prepay_id, pay_time
      )
    values (#{id,jdbcType=INTEGER}, #{lectureId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DOUBLE}, #{prepayId,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zeropoint.homemaking.domain.LectureOrders">
    update lecture_orders
    set lecture_id = #{lectureId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      prepay_id = #{prepayId,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, lecture_id, user_id, create_time, status, order_number, amount, prepay_id, 
    pay_time
    from lecture_orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, lecture_id, user_id, create_time, status, order_number, amount, prepay_id, 
    pay_time
    from lecture_orders
  </select>
  <select id="findLectureOrderByUserId" resultMap="BaseResultMap">
    select * from lecture_orders
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="findByUserIdAndId" resultMap="BaseResultMap">
    select *from lecture_orders
    where user_id =#{userId,jdbcType=INTEGER} and lecture_id =#{lectureId,jdbcType=INTEGER}
  </select>
  <select id="findByOrderNumber" resultMap="BaseResultMap">
    select *from lecture_orders
    where order_number = #{orderNumber,jdbcType=VARCHAR}
  </select>
  <insert id="insert1" parameterType="com.zeropoint.homemaking.domain.LectureOrders">
    insert into lecture_orders (id, lecture_id, user_id,
      create_time, status, order_number,
      amount, prepay_id, pay_time
      )
    values (#{id,jdbcType=INTEGER}, #{lectureId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR},
      #{amount,jdbcType=DOUBLE}, #{prepayId,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <select id="selectAll1" resultMap="BaseResultMap">
    select id, lecture_id, user_id, create_time, status, order_number, amount, prepay_id,
    pay_time
    from lecture_orders
  </select>

  <select id="selectByCondition1" resultMap="BaseResultMap">
    select l.*,u.name as username,e.name as lecturename,e.*
    from lecture_orders l
    inner join  lecture e on l.lecture_id=e.id
    inner join user u on u.id=l.user_id
    <where>
        l.type=4
      <if test="name != null and name != ''">
        and u.name LIKE  '%${name}%'
      </if>
      <if test="status != null and status != '' ">
        and
        l.status = #{status}

      </if>
      <if test="startTime != null and startTime != '' and endTime != '' and endTime != null">
        and
        l.create_time between #{startTime} and #{endTime}
      </if>
    </where>
    limit #{page},#{rows}
  </select>

  <select id="count1" resultType="int">
    SELECT  COUNT(1) FROM lecture_orders l
    inner join  lecture e on l.lecture_id=e.id
    inner join user u on u.id=l.user_id
    <where>
      l.type=4
      <if test="name != null and name != ''">
        and u.name LIKE  '%${name}%'
      </if>
      <if test="status != null and status != '' ">
        and
        l.status = #{status}

      </if>
      <if test="startTime != null and startTime != '' and endTime != '' and endTime != null">
        and
        l.create_time between #{startTime} and #{endTime}
      </if>
    </where>
  </select>

  <delete id="delete1">
    delete from lecture_orders
    where id in
    <foreach collection="ids" close=")" open="(" separator="," item="item" index="index">
      #{item}
    </foreach>
  </delete>

  <select id="selectKey1" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select l.*,u.name as username,e.name as lecturename,e.*
    from lecture_orders l
    inner join  lecture e on l.lecture_id=e.id
    inner join user u on u.id=l.user_id
    where l.id = #{id}
  </select>

  <select id="selectByCondition2" resultMap="BaseResultMap">
    select l.*,u.name as username,s.name as packageName,s.*
    from lecture_orders l
    inner join  service_package s on l.package_id=s.id
    inner join user u on u.id=l.user_id
    <where>
      l.type=5
      <if test="name != null and name != ''">
        and s.name LIKE  '%${name}%'
      </if>
      <if test="startTime != null and startTime != '' and endTime != '' and endTime != null">
        and
        l.create_time between #{startTime} and #{endTime}
      </if>
    </where>
    limit #{page},#{rows}
  </select>

  <select id="count2" resultType="int">
    SELECT  COUNT(1) FROM lecture_orders l
    inner join  service_package s on l.package_id=s.id
    inner join user u on u.id=l.user_id
    <where>
      l.type=4
      <if test="name != null and name != ''">
        and u.name LIKE  '%${name}%'
      </if>
      <if test="startTime != null and startTime != '' and endTime != '' and endTime != null">
        and
        l.create_time between #{startTime} and #{endTime}
      </if>
    </where>
  </select>

  <select id="selectKey2" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select l.*,u.name as username,s.name as packageName,s.*
    from lecture_orders l
    inner join  service_package s on l.package_id=s.id
    inner join user u on u.id=l.user_id
    where l.id = #{id}
  </select>

</mapper>