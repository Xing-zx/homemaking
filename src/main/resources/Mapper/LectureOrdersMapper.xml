<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeropoint.homemaking.dao.LectureOrdersMapper">
  <resultMap id="BaseResultMap" type="com.zeropoint.homemaking.domain.LectureOrders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lecture_id" jdbcType="INTEGER" property="lectureId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="prepay_id" jdbcType="VARCHAR" property="prepayId" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lecture_orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zeropoint.homemaking.domain.LectureOrders">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT last_insert_id()
    </selectKey>
    insert into lecture_orders (id, lecture_id, user_id,
      create_time, status, order_number, 
      amount, prepay_id, pay_time
      )
    values (#{id,jdbcType=INTEGER}, #{lectureId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DOUBLE}, #{prepayId,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zeropoint.homemaking.domain.LectureOrders">
    update lecture_orders
    set lecture_id = #{lectureId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DOUBLE},
      prepay_id = #{prepayId,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, lecture_id, user_id, create_time, status, order_number, amount, prepay_id, 
    pay_time
    from lecture_orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, lecture_id, user_id, create_time, status, order_number, amount, prepay_id, 
    pay_time
    from lecture_orders
  </select>
  <select id="findLectureOrderByUserId" resultMap="BaseResultMap">
    select * from lecture_orders
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="findByUserIdAndId" resultMap="BaseResultMap">
    select *from lecture_orders
    where user_id =#{userId,jdbcType=INTEGER} and lecture_id =#{lectureId,jdbcType=INTEGER}
  </select>
  <select id="findByOrderNumber" resultMap="BaseResultMap">
    select *from lecture_orders
    where order_number = #{orderNumber,jdbcType=VARCHAR}
  </select>


</mapper>