<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeropoint.homemaking.dao.ServicePersonnelMapper">
  <resultMap id="BaseResultMap" type="com.zeropoint.homemaking.domain.ServicePersonnel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="work_experience" jdbcType="INTEGER" property="workExperience" />
    <result column="work_content" jdbcType="VARCHAR" property="workContent" />
    <result column="work_type" jdbcType="INTEGER" property="workType" />
    <result column="work_city" jdbcType="VARCHAR" property="workCity" />
    <result column="level" jdbcType="CHAR" property="level" />
    <result column="charge_standard" jdbcType="INTEGER" property="chargeStandard" />
    <result column="applause_rate" jdbcType="DOUBLE" property="applauseRate" />
    <result column="photo_url" jdbcType="VARCHAR" property="photoUrl" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    <result column="stores_id" jdbcType="INTEGER" property="storesId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="program_code" jdbcType="VARCHAR" property="programCode" />
    <result column="upline" jdbcType="INTEGER" property="upline" />
    <result column="upupline" jdbcType="INTEGER" property="upupline" />
    <result column="creat_times" jdbcType="TIMESTAMP" property="creatTimes" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="current_brokerage" jdbcType="DOUBLE" property="currentBrokerage" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="schedule" jdbcType="INTEGER" property="schedule" />
    <result column="all_brokerage" jdbcType="DOUBLE" property="allBrokerage" />
    <result column="withdrawal_brokerage" jdbcType="DOUBLE" property="withdrawalBrokerage" />
    <result column="myself" jdbcType="LONGVARCHAR" property="myself" />
    <result column="stores_name" jdbcType="LONGVARCHAR" property="storesName" />
    <result column="name" jdbcType="VARCHAR" property="certificateName" />
    <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl" />
    <result column="personnel_id" jdbcType="INTEGER" property="personnelId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="expiration_time" jdbcType="TIMESTAMP" property="expirationTime" />
  </resultMap>

  <resultMap id="StoresResultMap" type="com.zeropoint.homemaking.domain.Stores">
    <result column="stores_id" jdbcType="INTEGER" property="storesId" />
    <result column="stores_password" jdbcType="VARCHAR" property="storesPassword" />
    <result column="stores_name" jdbcType="VARCHAR" property="storesName" />
    <result column="stores_address" jdbcType="VARCHAR" property="storesAddress" />
    <result column="stores_introduced" jdbcType="VARCHAR" property="storesIntroduced" />
    <result column="sions_id" jdbcType="INTEGER" property="sionsId" />
    <result column="broker_id" jdbcType="INTEGER" property="brokerId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <resultMap id="specialityMap" type="com.zeropoint.homemaking.domain.Speciality">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="personnel_id" jdbcType="INTEGER" property="personnelId" />
    <result column="name1" jdbcType="VARCHAR" property="name"/>
    <result column="categoryName" jdbcType="VARCHAR" property="categoryName"/>
  </resultMap>

  <resultMap id="CertificateMap" type="com.zeropoint.homemaking.domain.Certificate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl" />
    <result column="personnel_id" jdbcType="INTEGER" property="personnelId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="expiration_time" jdbcType="TIMESTAMP" property="expirationTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="categoryName" jdbcType="VARCHAR" property="categoryName" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from service_personnel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zeropoint.homemaking.domain.ServicePersonnel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT last_insert_id()
    </selectKey>
    insert into service_personnel (id, name, password,
      real_name, idcard, age, 
      gender, phone, native_place, 
      work_experience, work_content, work_type, 
      work_city, level, charge_standard, 
      applause_rate, photo_url, video_url, 
      profile, stores_id, status, 
      program_code, upline, upupline, 
      creat_times, count, balance, 
      current_brokerage, user_id, schedule, 
      all_brokerage, withdrawal_brokerage, myself
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{gender,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{nativePlace,jdbcType=VARCHAR}, 
      #{workExperience,jdbcType=INTEGER}, #{workContent,jdbcType=VARCHAR}, #{workType,jdbcType=INTEGER}, 
      #{workCity,jdbcType=VARCHAR}, #{level,jdbcType=CHAR}, #{chargeStandard,jdbcType=INTEGER}, 
      #{applauseRate,jdbcType=DOUBLE}, #{photoUrl,jdbcType=VARCHAR}, #{videoUrl,jdbcType=VARCHAR}, 
      #{profile,jdbcType=VARCHAR}, #{storesId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{programCode,jdbcType=VARCHAR}, #{upline,jdbcType=INTEGER}, #{upupline,jdbcType=INTEGER}, 
      #{creatTimes,jdbcType=TIMESTAMP}, #{count,jdbcType=INTEGER}, #{balance,jdbcType=DOUBLE}, 
      #{currentBrokerage,jdbcType=DOUBLE}, #{userId,jdbcType=INTEGER}, #{schedule,jdbcType=INTEGER}, 
      #{allBrokerage,jdbcType=DOUBLE}, #{withdrawalBrokerage,jdbcType=DOUBLE}, #{myself,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zeropoint.homemaking.domain.ServicePersonnel">
    update service_personnel
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      work_experience = #{workExperience,jdbcType=INTEGER},
      work_content = #{workContent,jdbcType=VARCHAR},
      work_type = #{workType,jdbcType=INTEGER},
      work_city = #{workCity,jdbcType=VARCHAR},
      level = #{level,jdbcType=CHAR},
      charge_standard = #{chargeStandard,jdbcType=INTEGER},
      applause_rate = #{applauseRate,jdbcType=DOUBLE},
      photo_url = #{photoUrl,jdbcType=VARCHAR},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=VARCHAR},
      stores_id = #{storesId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      program_code = #{programCode,jdbcType=VARCHAR},
      upline = #{upline,jdbcType=INTEGER},
      upupline = #{upupline,jdbcType=INTEGER},
      creat_times = #{creatTimes,jdbcType=TIMESTAMP},
      count = #{count,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DOUBLE},
      current_brokerage = #{currentBrokerage,jdbcType=DOUBLE},
      user_id = #{userId,jdbcType=INTEGER},
      schedule = #{schedule,jdbcType=INTEGER},
      all_brokerage = #{allBrokerage,jdbcType=DOUBLE},
      withdrawal_brokerage = #{withdrawalBrokerage,jdbcType=DOUBLE},
      myself = #{myself,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, password, real_name, idcard, age, gender, phone, native_place, work_experience, 
    work_content, work_type, work_city, level, charge_standard, applause_rate, photo_url, 
    video_url, profile, stores_id, status, program_code, upline, upupline, creat_times, 
    count, balance, current_brokerage, user_id, schedule, all_brokerage, withdrawal_brokerage, 
    myself
    from service_personnel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, password, real_name, idcard, age, gender, phone, native_place, work_experience, 
    work_content, work_type, work_city, level, charge_standard, applause_rate, photo_url, 
    video_url, profile, stores_id, status, program_code, upline, upupline, creat_times, 
    count, balance, current_brokerage, user_id, schedule, all_brokerage, withdrawal_brokerage, 
    myself
    from service_personnel
    where status>0
  </select>

  <select id="selectByCondition" parameterType="Map" resultMap="BaseResultMap">
    select * from service_personnel
    <where>
         1=1
      <if test="comment != null and comment !=''">
        and
        applause_rate =#{comment}
      </if>
      <if test="certificate != null and certificate.size() &gt; 0   ">
       AND
        <foreach close="" collection="certificate" item="item" open="" separator="and">

          #{item} in
          (
          SELECT category_id from certificate
          where personnel_id=service_personnel.id
          )
        </foreach>
      </if>

      <if test="speciality != null and speciality.size()&gt;0 ">
        AND
        <foreach close="" collection="speciality" item="item" open="" separator="and">

          #{item} in
          (
          SELECT category_id from speciality
          where personnel_id =service_personnel.id
          )
        </foreach>

      </if>

      <if test="workCity != '' and workCity != null">
        and
        work_city =#{workCity}
      </if>
      <if test="nativePlace !=null and nativePlace !='' ">
        and
        native_place = #{nativePlace}
      </if>
      <if test="ageMin !='' and ageMax !='' and ageMin !=null and ageMax !=null">
        and
        age between #{ageMin} and #{ageMax}
      </if>
      <if test="chargeMax !=null and chargeMin !=null and chargeMin !='' and chargeMax !=''">
        and
        charge_standard between #{chargeMin} and #{chargeMax}
      </if>
      <if test="chargeMin != null and chargeMin != ''">
        and
        charge_standard &gt;#{chargeMin}
      </if>
      <if test="expirence != null and expirence != ''">
        and
        work_experience &gt;= #{expirence}
      </if>
      <if test="keyword !=null and keyword !=''">
        and
        name like concat ("%",#{keyword,jdbcType=VARCHAR},"%")
      </if>
      <if test="status !=null and status !=''">
        and
        status =#{status,jdbcType=INTEGER}
      </if>
      <if test="type !=null and type !=''">
        and
        work_type =#{type}
      </if>
      <if test="status ==null or status ==''">
      and
      status =2
      </if>

    </where>
  </select>
  <select id="findByUserId" resultMap="BaseResultMap">
    select * from service_personnel
    where user_id =#{userId,jdbcType=INTEGER}
  </select>
  <select id="getCountByUpline" resultType="java.lang.Integer">
    select count(*)from service_personnel
    where upline=#{upline} or upupline=#{upline}
  </select>

  <select id="selectByCondition1" resultMap="BaseResultMap">
    select s.*,o.stores_name
    from service_personnel s INNER JOIN stores o on o.stores_id=s.stores_id
    <where>
      s.status='2'
      <if test="name != null and name != ''">
        and s.name LIKE  '%${name}%'
      </if>
      <if test="storesId != null and storesId != '' ">
        and
        s.stores_id = #{storesId}
      </if>
      <if test="workType != null and workType != '' ">
        and
        s.work_type = #{workType}
      </if>
      <if test="startTime != null and startTime != '' and endTime != '' and endTime != null">
        and
        s.creat_times between #{startTime} and #{endTime}
      </if>
    </where>
    order by applause_rate desc
    limit #{page},#{rows}
  </select>

  <select id="count1" resultType="int">
    SELECT  COUNT(1) FROM service_personnel s
    INNER JOIN stores o on o.stores_id=s.stores_id
    <where>
      s.status='2'
      <if test="name != null and name != ''">
        and s.name LIKE  '%${name}%'
      </if>
      <if test="storesId != null and storesId != '' ">
        and
        s.stores_id = #{storesId}
      </if>
      <if test="workType != null and workType != '' ">
        and
        s.work_type = #{workType}
      </if>
      <if test="startTime != null and startTime != '' and endTime != '' and endTime != null">
        and
        s.creat_times between #{startTime} and #{endTime}
      </if>
    </where>
  </select>

  <select id="selectByConditions2" parameterType="Map" resultMap="BaseResultMap">
    select *
    from service_personnel
    <where>
      status in(1,3)
      <if test="name != null and name != ''">
        and name LIKE  '%${name}%'
      </if>
      <if test="workType != null and workType != '' ">
        and
        work_type = #{workType}
      </if>
      <if test="startTime != null and startTime != '' and endTime != '' and endTime != null">
        and
        creat_times between #{startTime} and #{endTime}
      </if>
    </where>
  </select>

  <select id="counts2" resultType="int">
    SELECT  COUNT(1) FROM service_personnel
    <where>
      status in(1,3)
      <if test="name != null and name != ''">
        and name LIKE  '%${name}%'
      </if>
      <if test="workType != null and workType != '' ">
        and
        work_type = #{workType}
      </if>
      <if test="startTime != null and startTime != '' and endTime != '' and endTime != null">
        and
        creat_times between #{startTime} and #{endTime}
      </if>
    </where>
  </select>

  <select id="SelectIds1" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select p.*,s.*
    from service_personnel p
    INNER JOIN stores s ON p.stores_id=s.stores_id
    where p.id = #{id}
  </select>

  <select id="SelectIds2" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from service_personnel
    where id = #{id}
  </select>

  <select id="selectStores1" parameterType="Map" resultMap="StoresResultMap">
    select *  from stores
  </select>

  <delete id="delete1">
    delete from service_personnel
    where id in
    <foreach collection="ids" close=")" open="(" separator="," item="item" index="index">
      #{item}
    </foreach>
  </delete>


  <update id="updateStatus" parameterType="com.zeropoint.homemaking.domain.ServicePersonnel">
    update service_personnel
    set status = #{status,jdbcType=INTEGER},
     stores_id=#{storesId},
     applause_rate=5
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectSpeciality" parameterType="Map" resultMap="specialityMap">
    select s.*,c.name as categoryName
    from speciality s
    INNER JOIN category c ON s.category_id=c.id
    where s.personnel_id=#{personnelId}
  </select>

  <select id="selectCertificate" resultType="int" resultMap="CertificateMap">
    select c.*,a.name as CategoryName
    from certificate c
    INNER JOIN category a ON c.category_id=a.id
    where personnel_id=#{personnelId}
  </select>

  <update id="updateCertificate" parameterType="com.zeropoint.homemaking.domain.Certificate">
    update certificate
    set status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateBrokerage1">
    update service_personnel
    set withdrawal_brokerage = withdrawal_brokerage + #{withdrawalBrokerage},
    all_brokerage = all_brokerage + #{allBrokerage}
    where id = #{id}
  </update>

  <update id="updateBrokerage2">
    update service_personnel
    set withdrawal_brokerage = withdrawal_brokerage + #{withdrawalBrokerage},
    all_brokerage = all_brokerage + #{allBrokerage}
    where id = #{id}
  </update>

</mapper>